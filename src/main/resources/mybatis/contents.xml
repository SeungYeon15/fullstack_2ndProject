<?xml version="1.0" encoding="UTF-8" ?> 
 
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.model.contents.ContentsMapper">

	<insert id="create"
		parameterType="com.model.contents.ContentsDTO">
		insert into contents(cateno, pname, price, filename,
		detail, rdate, stock)
		values(#{cateno},#{pname}, #{price}, #{filename},
		#{detail},
		sysdate(), #{stock})
	</insert>

	<select id="total" parameterType="Map" resultType="INT">
		select count(*) from contents
		<where>
			<choose>
				<when test="col=='pname'">
					pname like concat('%', #{word}, '%')
				</when>
				<when test="col=='price'">
					price like concat('%', #{word}, '%')
				</when>
				<when test="col=='cateno'">
					cateno = #{word}
				</when>
			</choose>
		</where>
	</select>

	<select id="list" parameterType="Map"
		resultType="com.model.contents.ContentsDTO">
		select contentsno, cateno,pname, price, filename, stock,rdate
		from
		contents
		<where>
			<choose>
				<when test="col=='pname'">
					pname like concat('%', #{word} ,'%')
				</when>
				<when test="col=='price'">
					price like concat('%', #{word} ,'%')
				</when>
				<when test="col=='cateno'">
					cateno = #{word}
				</when>
			</choose>
		</where>
		order by contentsno desc
		limit #{sno}, #{eno}
	</select>

	<select id="read" parameterType="int"
		resultType="com.model.contents.ContentsDTO">
		select contentsno, pname, price, filename, stock, rdate,
		detail
		from contents
		where contentsno = #{contentsno}
	</select>

	<select id="getCategory" resultType="java.util.Map">
		select cateno, catename 
		from category
	</select>
	
    <select id="mainlist" parameterType="java.util.Map" resultType="com.model.contents.ContentsDTO">
       select contentsno, pname, price, filename, detail, rdate 
       from shop.contents 
       where cateno=#{cateno};
    </select>
	<update id="update"
		parameterType="com.model.contents.ContentsDTO">
		update contents
		set pname =#{pname},
		price = #{price},
		detail = #{detail}
		where contentsno =#{contentsno}

	</update>

	<update id="updateFile" parameterType="Map">
		update contents
		set
		filename = #{filename}
		where contentsno = #{contentsno}
	</update>

</mapper>